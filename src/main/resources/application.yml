spring:
  application:
    name: unicat-api
  config:
    import: classpath:core/application-oauth.yml
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  web:
    locale: ko
    locale-resolver: accept-header
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/postgres}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    open-in-view: false

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  mail:
    host: ${SPRING_MAIL_HOST:localhost}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: ${SPRING_MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${SPRING_MAIL_STARTTLS_ENABLE:true}
            required: ${SPRING_MAIL_STARTTLS_REQUIRED:true}
          connectiontimeout: ${SPRING_MAIL_CONNECTION_TIMEOUT:5000}
          timeout: ${SPRING_MAIL_TIMEOUT:5000}
          writetimeout: ${SPRING_MAIL_WRITE_TIMEOUT:5000}
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  ai:
    openai:
      api-key: ${SPRING_AI_OPENAI_API_KEY}


springdoc:
  swagger-ui:
    path: /

app:
  name: unicat-api
  jwt:
    private-key: ${APP_JWT_PRIVATE_KEY:classpath:unicat.day/unicat.day.key}
    public-key: ${APP_JWT_PUBLIC_KEY:classpath:unicat.day/unicat.day.pub}
    key-id: ${APP_JWT_KEY_ID:rsa-key-id}
    cookie:
      name: Authorization
      domain: ${APP_JWT_COOKIE_DOMAIN:unicat.day}
      path: /
      secure: ${APP_JWT_COOKIE_SECURE:true}
      httpOnly: ${APP_JWT_COOKIE_HTTP_ONLY:true}
      sameSite: ${APP_JWT_COOKIE_SAME_SITE:Lax}
      maxAge: ${APP_JWT_COOKIE_MAX_AGE:604800}
  api:
    protocol: https
    domain: api.unicat.day
    port: 443
  toss:
    client-key: ${APP_TOSS_CLIENT_KEY:test_ck_D5GePWvyJnrK0W0k6q8gLzN97Eoq} # 토스거 공개적으로 제공하는 키
    secret-key: ${APP_TOSS_SECRET_KEY:test_sk_zXLkKEypNArWmo50nX3lmeaxYG5R} # 토스가 공개적으로 제공하는 키
    approve-url: ${APP_TOSS_APPROVE_URL:https://api.tosspayments.com/v1/billing}
    billing-url: ${APP_TOSS_BILLING_URL:https://api.tosspayments.com/v1/billing/authorizations/issue}
  frontend:
    url: ${APP_FRONTEND_URL:https://unicat.day}
  email:
    from: ${APP_MAIL_MAIL_FROM}
    from-name: ${APP_MAIL_MAIL_FROM_NAME}
  supabase:
    url: ${SUPABASE_URL}
    key: ${SUPABASE_KEY}
    storage:
      bucket: media
  cors:
    allowed-origins: ${APP_CORS_ALLOWED_ORIGINS:["https://unicat.day"]}
    allowed-methods: [ "GET", "POST", "PUT", "DELETE", "OPTIONS" ]
    allowed-headers: [ "*" ]
    allow-credentials: true
    max-age: 3600
  tts:
    file-path: "/Users/wooyeon/Desktop/"
    file-extension: ".mp3"
  openai-script:
    prompt: ${SCRIPT_AI_PROMPT:"다음 스크립트를 읽고, '%s'에 맞춰 문장을 자연스럽게 다듬고 필요한 보충 내용을 추가해줘.%n%n원본 스크립트:%n%s"}
    model: ${SCRIPT_AI_MODEL:gpt-4o-mini}
    temperature: ${SCRIPT_AI_TEMPERATURE:0.7}
  openai-image:
    prompt: ${IMAGE_AI_PROMPT:"Read the following script and create an image that suits the script in the style of ‘%s’. %n%nScript:%n%s"}
    model: ${IMAGE_AI_MODEL:dall-e-2}
    quality: ${IMAGE_AI_QUALITY:standard}
  media:
    ffmpeg:
      path: ${APP_MEDIA_FFMPEG_PATH:ffmpeg}

server:
  port: 443
  ssl:
    key-store: ${APP_SSL_KEY_STORE:classpath:unicat.day/unicat.day.p12}
    key-store-type: ${APP_SSL_KEY_STORE_TYPE:PKCS12}
    key-store-password: ${APP_SSL_KEY_STORE_PASSWORD:unicat.day}
    key-alias: ${APP_SSL_KEY_ALIAS:unicat.day}
  error:
    include-exception: true
    include-binding-errors: always
    include-message: always