plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.ben-manes.versions' version '0.52.0'
}

ext {
	springAiVersion = "1.0.0-M6"
}

group = 'gettothepoint'
if (!project.hasProperty('version')) {
	throw new GradleException("Missing version property in gradle.properties")
}
version = project.version

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	// ===== Spring Boot Core =====
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	// ===== Infrastructure =====
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'io.minio:minio:8.5.17'

	// ===== API Documentation =====
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

	// ===== Lombok =====
	compileOnly 'org.projectlombok:lombok:1.18.38'
	annotationProcessor 'org.projectlombok:lombok:1.18.38'

	// ===== Testing =====
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation "org.testcontainers:minio:1.21.0"
	testImplementation 'org.testcontainers:postgresql:1.21.0'
	testImplementation 'com.h2database:h2'

	// ===== Google  =====
	implementation 'com.google.api-client:google-api-client:2.7.2'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev20250224-2.0.0'
	implementation 'com.google.apis:google-api-services-youtubeAnalytics:v2-rev20230704-2.0.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.33.1'
	implementation 'com.google.cloud:google-cloud-texttospeech:2.61.0'

	// ===== AI =====
	implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-M7")
	implementation 'org.springframework.ai:spring-ai-starter-model-openai'
	implementation 'org.springframework.ai:spring-ai-openai'

	// ===== ETC =====
	implementation 'com.github.loki4j:loki-logback-appender:1.6.0'
	runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.2.0.Final:osx-aarch_64' // for Silicon Mac
	implementation 'org.apache.tika:tika-core:3.1.0'
}

tasks.named('test') {
	useJUnitPlatform {
		excludeTags 'manual'
	}
}

configurations.configureEach {
	exclude group: 'commons-logging', module: 'commons-logging'
}